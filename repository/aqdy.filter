/*
 * Copyright (c) 2018, Jason Tsang.(https://github.com/gnastnosaj) All Rights Reserved.
 */

def baseUrl = 'http://www.aqdy.net'
def builder

task('build') {
    connection {
        url baseUrl
        page {
            document {
                catalog {
                    builder = { _href ->
                        return {
                            url _href

                            def current, next

                            def parser = { page ->

                                def itemParser = {
                                    def id = it.select('a').attr('title')
                                    def title = id
                                    def thumbnail = it.select('a').attr('data-original')
                                    def href = it.select('a').attr('abs:href')

                                    page.data(
                                            "id": id,
                                            "title": title,
                                            "thumbnail": thumbnail,
                                            "href": href
                                    )
                                }

                                def groupParser = { container ->
                                    def head = container.select('div.hy-video-head')
                                    page.data(
                                            "type": "head",
                                            "title": head.select('h3').text(),
                                            "href": head.select('a').attr('abs:href')
                                    )
                                    def items = container.select('div.hy-video-list div.col-md-2')
                                    items.each {
                                        itemParser(it)
                                    }
                                }

                                select('div.hy-layout:has(div.hy-video-list)').each {
                                    groupParser(it)
                                }

                                next = select('div.hy-page ul li a:contains(下一页)').attr('abs:href')
                            }

                            task('refresh') {
                                def result

                                current = _href

                                connection {
                                    url current
                                    result = page {
                                        document parser
                                    }
                                }

                                return result
                            }

                            task('loadMore') {
                                def result

                                current = next

                                connection {
                                    url current
                                    result = page {
                                        document parser
                                    }
                                }

                                return result
                            }

                            task('hasMore') {
                                return next && !next.allWhitespace
                            }

                            task('page') { href ->
                                return connection {
                                    url href

                                    task('refresh') {
                                        def result

                                        connection {
                                            url href
                                            result = page {
                                                document { page ->
                                                    def details = [:]
                                                    select('dl.content ul li').each {
                                                        def k = it.select('span').text()
                                                        def v = [:]
                                                        it.select('a').each {
                                                            def t = it.text()
                                                            if (t.length() > 0) {
                                                                def build = builder(it.attr('abs:href'))
                                                                def c = connection build
                                                                v[t] = c
                                                            }
                                                        }
                                                    }

                                                    def style = select('dl.content a.videopic').attr('style')
                                                    def cover = style.substring(style.indexOf('(') + 1, style.indexOf(')'))
                                                    def description = select('div.hy-layout div.hy-switch-tabs div.plot').text()
                                                    page.data(
                                                            "cover": cover,
                                                            "details": details,
                                                            "description": description
                                                    )
                                                }
                                            }
                                        }

                                        return result
                                    }

                                    task('loadMore') {
                                        return null
                                    }

                                    task('hasMore') {
                                        return false
                                    }

                                    task('entrance') {
                                        return _href.toString()
                                    }

                                    task('layout') {
                                        return 'detail'
                                    }
                                }
                            }
                        }
                    }

                    def list = select('ul.menulist li a')
                    list.remove(0)
                    list.each { a ->
                        category(a.text()) {
                            def build = builder(a.attr('abs:href'))
                            connection build
                        }
                    }
                }
            }
        }
    }
}