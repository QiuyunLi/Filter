def baseUrl = 'http://www.930mh.com'
def builder

task('build') {
    connection {
        url baseUrl
        page {
            document {
                catalog {
                    def pageBuilder = { _href ->
                        return { href ->
                            return connection {
                                url href

                                task('injectCSS') { url ->
                                    return '''
                                        .subHeader {
                                            height: 0px;
                                        }
                                        
                                        .page-main .globalPadding {
                                            display: none;
                                        }
                                        .page-main .imgBox {
                                            margin-bottom: 0px !important;
                                        }
                                        .page-main .imgBox + div {
                                            display: none;
                                        }
                                        
                                        .UnderPage .bdimgshare-bg {
                                            display: none;
                                        }
                                        .UnderPage .bdimgshare-content {
                                            display: none;
                                        }
                                        .UnderPage .control_bottom {
                                            height: auto !important;
                                        }
                                        .UnderPage .autoHeight {
                                            display: none;
                                        }
                                        
                                        body > :not(.page-main):not(.UnderPage) {
                                            display: none !important;
                                        }
                                    '''
                                }

                                task('filter') {
                                    return it.contains('www.qiaopiguniang.com') ||
                                            it.contains('vol.txdwc.cn') ||
                                            it.contains('cnzz.com') ||
                                            it.contains('baidu') ||
                                            it.contains('changyan') ||
                                            it.contains('alipay') ||
                                            it.contains('sjb.jz198561.cn') ||
                                            it.contains('rh.greenbetterkids.com') ||
                                            it.contains('www.wxbgf.top') ||
                                            it.contains('zmj.guanqinjie.cn') ||
                                            it.contains('nanin.gexinbang.cn') ||
                                            it.contains('im.ggsjgs.cn')
                                }

                                task('entrance') {
                                    return _href.toString()
                                }

                                task('layout') {
                                    return 'webview'
                                }
                            }
                        }
                    }
                    def list = select('ul.topTheme_nav_inl li a')
                    def home = list.remove(0)
                    connection(home.text(), {
                        url home.attr('abs:href')

                        task('refresh') {
                            def result

                            connection {
                                url home.attr('abs:href')
                                result = page {
                                    document { page ->
                                        def parser = { container ->
                                            def head = container.select('div.head-public-h')
                                            page.data(
                                                    "type": "head",
                                                    "title": head.select('h2').text(),
                                                    "href": head.select('a').attr('abs:href')
                                            )
                                            def items = container.select('ul li')
                                            items.each {
                                                def id = it.select('a').attr('title')
                                                def title = id
                                                def thumbnail = it.select('img').attr('src')
                                                def href = it.select('a').attr('href').replace("www", "m")

                                                page.data(
                                                        "id": id,
                                                        "title": title,
                                                        "thumbnail": thumbnail,
                                                        "href": href
                                                )
                                            }
                                        }

                                        parser(select('div.new_update_l'))
                                        parser(select('div.new_recommend_l'))
                                        select('div.youn_mh_l').each {
                                            parser(it)
                                        }

                                        def tabs = select('ul.comic_tabs li a')
                                        tabs.each { a ->
                                            page.data(
                                                    "type": "head",
                                                    "title": a.text(),
                                                    "href": a.attr('href')
                                            )
                                            def items = select("${a.attr('href')} ul li")
                                            items.each {
                                                def id = it.select('a').attr('title')
                                                def title = id
                                                def thumbnail = it.select('img').attr('src')
                                                def href = it.select('a').attr('href')

                                                page.data(
                                                        "id": id,
                                                        "title": title,
                                                        "thumbnail": thumbnail,
                                                        "href": href
                                                )
                                            }
                                        }
                                    }
                                }
                            }

                            return result
                        }

                        task('hasMore') {
                            return false
                        }

                        task('page', pageBuilder(home.attr('abs:href')))

                        task('build') { href ->
                            def build = builder(href)
                            return connection(build)
                        }
                    })

                    list.remove(list.size() - 1)
                    list.remove(list.size() - 1)

                    builder = { _href ->
                        return {
                            url _href

                            def current, next

                            def parser = { page ->
                                next = select('ul.pagination li.next a').attr('abs:href')

                                def post = select('li.list-comic')
                                post.each {
                                    def id = it.select('span.comic_list_det h3').text()
                                    def title = id
                                    def thumbnail = it.select('a.comic_img img').attr('src')
                                    def href = it.select('a.comic_img').attr('href').replace("www", "m")

                                    if (id.allWhitespace) {
                                        id = it.select('a.image-link').attr('title')
                                        title = id
                                        thumbnail = it.select('a.image-link img').attr('src')
                                        href = it.select('a.image-link').attr('href').replace("www", "m")
                                    }

                                    page.data(
                                            "id": id,
                                            "title": title,
                                            "thumbnail": thumbnail,
                                            "href": href
                                    )
                                }
                            }

                            task('refresh') {
                                def result

                                current = _href

                                connection {
                                    url current
                                    result = page {
                                        document parser
                                    }
                                }

                                return result
                            }

                            task('loadMore') {
                                def result

                                current = next

                                connection {
                                    url current
                                    result = page {
                                        document parser
                                    }
                                }

                                return result
                            }

                            task('hasMore') {
                                return next && !next.allWhitespace
                            }

                            task('page', pageBuilder(_href))
                        }
                    }
                    list.each { a ->
                        connection(a.text(), builder(a.attr('abs:href')))
                    }
                }
            }
        }
    }
}

task('search') { keyword ->
    return connection(builder("$baseUrl/search/?keywords=$keyword"))
}