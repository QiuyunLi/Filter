def baseUrl = 'http://www.rarbt.com'
def builder

task('build') {
    connection {
        url baseUrl
        page {
            document {
                catalog {
                    builder = { _href ->
                        return {
                            url _href

                            def current, next

                            def parser = { page ->
                                next = select('.pagelist a.next').attr('abs:href')

                                def post = select('.ml .item')
                                post.each {
                                    def id = it.select('.tt a').attr('title')
                                    def title = id
                                    def thumbnail = it.select('.litpic img').attr('src')
                                    if (thumbnail.indexOf('http') == -1) {
                                        thumbnail = "$baseUrl$thumbnail".toString()
                                    }
                                    def href = it.select('.tt a').attr('abs:href')

                                    page.data(
                                            "id": id,
                                            "title": title,
                                            "thumbnail": thumbnail,
                                            "href": href
                                    )
                                }
                            }

                            task('refresh') {
                                def result

                                current = _href

                                connection {
                                    url current
                                    result = page {
                                        document parser
                                    }
                                }

                                return result
                            }

                            task('loadMore') {
                                def result

                                current = next

                                connection {
                                    url current
                                    result = page {
                                        document parser
                                    }
                                }

                                return result
                            }

                            task('hasMore') {
                                return next && !next.allWhitespace
                            }

                            task('page') { href ->
                                return connection {
                                    url href

                                    task('refresh') {
                                        def result

                                        connection {
                                            url href
                                            result = page {
                                                document { page ->
                                                    def details = [:]
                                                    select('.moviedteail_list li').each {
                                                        def k = it.ownText()
                                                        def v = [:]
                                                        it.select('a').each {
                                                            def t = it.text()
                                                            if (t.length() > 0) {
                                                                def build = builder(it.attr('abs:href'))
                                                                def c = connection build
                                                                v[t] = c
                                                            }
                                                        }
                                                        if (!k.contains('详情') && v.size() != 0) {
                                                            details[k] = v
                                                        }
                                                    }

                                                    def cover = select('.moviedteail_img img').attr('src')
                                                    if (cover.indexOf('http') == -1) {
                                                        cover = "$baseUrl$cover".toString()
                                                    }
                                                    def description = ''
                                                    def spans = select('.viewbox div:not(.cl) p:not(.torrent) span')
                                                    def i = spans.size() - 1
                                                    while (description.length() < 10 && i > -1) {
                                                        description = spans[i].text()
                                                        i--
                                                    }
                                                    page.data(
                                                            "cover": cover,
                                                            "details": details,
                                                            "description": description
                                                    )
                                                    select('.viewbox div:not(.cl) p:not(.torrent) img').each {
                                                        def thumbnail = it.attr('src')
                                                        if (thumbnail.indexOf('http') == -1) {
                                                            thumbnail = "$baseUrl$thumbnail".toString()
                                                        }
                                                        page.data(
                                                                "cover": cover,
                                                                "thumbnail": thumbnail
                                                        )
                                                    }
                                                }
                                            }
                                        }

                                        return result
                                    }

                                    task('loadMore') {
                                        return null
                                    }

                                    task('hasMore') {
                                        return false
                                    }

                                    task('entrance') {
                                        return _href.toString()
                                    }

                                    task('layout') {
                                        return 'detail'
                                    }
                                }
                            }
                        }
                    }

                    def list = select('.Btitle').not('.posrel').select('a')
                    def item = list.remove(0)
                    connection(item.text(), builder(baseUrl))
                    item = list.remove(13)
                    connection(item.text(), builder(item.attr('abs:href')))

                    list.each { a ->
                        category(a.text()) {
                            def build = builder(a.attr('abs:href'))
                            connection build
                        }
                    }

                    select('.mrl .otcat').each { box ->
                        def group = box.select('h3').text()
                        category(group) {
                            box.select('a').each { a ->
                                children(a.text()) {
                                    def build = builder(a.attr('abs:href'))
                                    connection build
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

task('search') { keyword ->
    return connection(builder("$baseUrl/index.php/search/index.html?search=$keyword"))
}